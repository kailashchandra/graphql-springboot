type Query {
   sellers(filter: SellerFilterInput, page: PageInput!, sortBy: SellerSortBy): SellerPageableResponse!
}

input SellerFilterInput {
    searchByName: String
    producerIds: [ID]
    marketplaceIds: [String]
}

input PageInput {
    page: Int!
    size: Int!
}

enum SellerSortBy {
    SELLER_INFO_EXTERNAL_ID_ASC
    SELLER_INFO_EXTERNAL_ID_DESC
    NAME_ASC
    NAME_DESC
    MARKETPLACE_ID_ASC
    MARKETPLACE_ID_DESC
}

type SellerPageableResponse {
    meta: PageMeta!
    data: [SellerDTO!]!
}

type SellerDTO {
    sellerName: String!
    externalId: String!
    marketplaceId: String!
    producerSellerStates: [ProducerSellerStateDTO!]!
}

type ProducerSellerStateDTO {
    producerId: ID!
    producerName: String!
    sellerState: String!
    sellerId: ID!
}

type PageMeta {
    totalElements: Int!
    pageSize: Int!
    totalElements: Int!
}
